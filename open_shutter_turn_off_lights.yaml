blueprint:
  name: Open shutters if daylight
  description: >
    Automatically opens shutters when daylight is detected or when lights have
    been on for more than 30 seconds. Supports extra user-defined conditions.
  domain: automation

  input:
    lights:
      name: Lights
      description: Lights or switches that will trigger and later be turned off.
      selector:
        target:
          entity:
            domain:
              - light
              - switch

    shutters:
      name: Shutters
      description: Shutters to open when conditions are met.
      selector:
        target:
          entity:
            domain: cover

    daylight_sensor:
      name: Daylight sensor
      description: Binary sensor indicating daylight.
      selector:
        entity:
          domain: binary_sensor

    extra_conditions:
      name: Extra conditions (optional)
      description: >
        Add additional conditions that must be true for the shutters to open.
      default: []
      selector:
        condition: {}

variables:
  light_entities: >
    {{ expand(!input lights) | map(attribute='entity_id') | list }}
  daylight_sensor: !input daylight_sensor

trigger:
  - platform: state
    entity_id: !input daylight_sensor
    from: "off"
    to: "on"
    for:
      minutes: 1
    alias: "Daylight detected for 1 minute"

  - platform: state
    entity_id: >
      {{ expand(!input lights) | map(attribute='entity_id') | join(', ') }}
    to: "on"
    for:
      seconds: 30
    alias: "Light(s) on for 30 seconds"

condition:
  - condition: template
    value_template: >
      {{ expand(!input lights)
         | selectattr('state', '==', 'on')
         | list
         | count > 0 }}
    alias: "At least one light on"

  - condition: and
    conditions: !input extra_conditions
    alias: "User-defined extra conditions"

action:
  - alias: "Open shutters"
    service: cover.open_cover
    target: !input shutters

  - delay:
      seconds: 10

  - alias: "Turn off triggering lights"
    service: light.turn_off
    target: !input lights

mode: single
