blueprint:
  name: "Open shutters if daylight"
  description: >
    Automatically opens shutters when daylight is detected or when lights have
    been on for more than 30 seconds, provided holiday and night modes are off.
    Supports extra user-defined conditions.
  domain: automation
  input:
    lights:
      name: Lights
      description: Lights or switches that will trigger and later be turned off.
      selector:
        target:
          entity:
            domain:
              - light
              - switch
    shutters:
      name: Shutters
      description: Shutters to open when conditions are met.
      selector:
        target:
          entity:
            domain: cover
    daylight_sensor:
      name: Daylight sensor
      description: Binary sensor indicating daylight.
      selector:
        entity:
          domain: binary_sensor
    extra_conditions:
      name: Extra conditions (optional)
      description: >
        Add additional conditions that must be true for the shutters to open.
        For example, presence, weather, or temperature checks.
      default: []
      selector:
        condition: {}

variables:
  selected_lights: !input lights
  
trigger:
  - platform: state
    entity_id: !input lights
    to: "on"
    for: "00:00:30"
    alias: "Light(s) on for 30 seconds"
  - platform: state
    entity_id: !input daylight_sensor
    from: "off"
    to: "on"
    for: "00:01:00"
    alias: "Daylight detected for 1 minute"

condition:
  - condition: state
    entity_id: input_boolean.holiday_mode
    state: "off"
  - condition: state
    entity_id: input_boolean.night_mode
    state: "off"
  - condition: template
    value_template: "{{ expand(selected_lights.entity_id) | selectattr('state', '==', 'on') | list | count > 0 }}"
    alias: "At least one light on"
  - condition: and
    conditions: !input extra_conditions
    alias: "User-defined extra conditions"

action:
  - alias: "Open shutters"
    action: cover.open_cover
    target: !input shutters
  - delay: "00:00:10"
  - alias: "Turn off triggering lights"
    action: light.turn_off
    target: !input lights

mode: single
